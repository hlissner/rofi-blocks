diff --git a/include/view.h b/include/view.h
index 783d6f4a..59e28c3d 100644
--- a/include/view.h
+++ b/include/view.h
@@ -272,6 +272,14 @@ void rofi_view_reload(void);
  */
 void rofi_view_switch_mode(RofiViewState *state, Mode *mode);
 
+/**
+ * @param state The handle to the view
+ * @param case_sensitive The new setting for this config option
+ *
+ * Changes Rofi's case sensitivity.
+ */
+void rofi_view_set_case_sensitive(RofiViewState *state, unsigned int case_sensitive);
+
 /**
  * @param state The handle to the view
  * @param text An UTF-8 encoded character array with the text to overlay.
diff --git a/source/view.c b/source/view.c
index dabfbfb0..21637b31 100644
--- a/source/view.c
+++ b/source/view.c
@@ -2657,6 +2657,15 @@ void rofi_view_workers_finalize(void) {
 }
 Mode *rofi_view_get_mode(RofiViewState *state) { return state->sw; }
 
+void rofi_view_set_case_sensitive(RofiViewState *state, unsigned int case_sensitive) {
+  unsigned int old = config.case_sensitive;
+  config.case_sensitive = case_sensitive;
+  if (old != case_sensitive) {
+    state->refilter = TRUE;
+    textbox_text(state->case_indicator, get_matching_state());
+  }
+}
+
 void rofi_view_set_overlay(RofiViewState *state, const char *text) {
   if (state->overlay == NULL || state->list_view == NULL) {
     return;
